/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
    int nodeCount(TreeNode* root) {
        if (!root)
            return 0;
        int l = nodeCount(root->left);
        int r = nodeCount(root->right);
        return 1 + l + r;
    }

    bool isCBT(TreeNode* root, int i, int& n) {
        if (!root)
            return true;
        if (i > n)
            return false;
        return isCBT(root->left, 2 * i, n) && isCBT(root->right, 2 * i + 1, n);
    }

public:
    bool isCompleteTree(TreeNode* root) {
        int n = nodeCount(root);
        int i = 1;
        return isCBT(root, i, n);
    }
};
