class Solution {
public:
    int helper(vector<int>& nums, int& k) {
        // create min heap
        priority_queue<int, vector<int>, greater<int>> pq;
        for (int i = 0; i < k; i++) {
            pq.push(nums[i]);
        }

        // for remaining elements, push if they less than top
        for (int i = k; i < nums.size(); i++) {
            if (nums[i] > pq.top()) {
                pq.pop();
                pq.push(nums[i]);
            }
        }

        int ans = pq.top();
        return ans;
    }
    int findKthLargest(vector<int>& nums, int k) { return helper(nums, k); }
};
