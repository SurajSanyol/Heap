class Solution {
       int nodeCount(Node *root){
           if(!root)return 0;
           int l = nodeCount(root->left);
           int r = nodeCount(root->right);
           return 1+l+r;
           
       }
       
       bool isCBT(Node*root,int i,int n){
            
            if(!root) return true;
             if(i>n)return  false;
             return isCBT(root->left,2*i,n)&& isCBT(root->right,2*i+1,n);
       }
       
       bool ismaxHeap(Node*root){
           if(!root)return true;
           bool ans = false;
           bool l=  ismaxHeap(root->left);
           bool r=  ismaxHeap(root->right);
           
           if(!root->left&&!root->right)return true;
           else if(root->left&& !root->right){
              ans = root->data > root->left->data;
           }
           else{
                ans = root->data > root->left->data&&  root->data > root->right->data;
           }
           
           return ans&&l&&r;
       }
       
       
  public:
    bool isHeap(struct Node* tree) {
        // code here
        int n = nodeCount(tree);
        int i =1;
        return isCBT(tree,i,n)&&ismaxHeap(tree);
    }
};
